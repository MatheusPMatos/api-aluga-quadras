name: Build Image Main

on:
   push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test ./... -v
        
  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get Api version
      id: extract_version
      run: |
        VERSION=$(grep 'const Version' ./cmd/main.go | awk -F\" '{print $2}')
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: matheuspmatos/api_aluga_quadra_prod:${{ env.VERSION }}
  deploy_to_ec2:
    runs-on: ubuntu-latest
    needs: build  # Só executa se o job 'build_and_push' tiver sucesso

    steps:
      # Connect to EC2 instance via SSH
      - name: Connect to EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}  # Adicione sua chave privada nas GitHub Secrets
          port: 22
          script: |
            echo "Conexão SSH bem-sucedida!"
            # Ir para o diretório da aplicação
            cd /
            cd home/docker
            # Fazer o pull da última imagem do Docker Hub
            docker-compose pull  # Atualizar as imagens com a versão mais recente
            docker-compose up -d  # Iniciar o serviço em segundo plano com o Docker Compose
